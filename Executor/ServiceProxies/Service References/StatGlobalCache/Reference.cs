//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceProxies.StatGlobalCache {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://escience.ifmo.ru/nano/services/", ConfigurationName="StatGlobalCache.IStatisticalGlobalCache")]
    public interface IStatisticalGlobalCache {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://escience.ifmo.ru/nano/services/IStatisticalGlobalCache/AddAllTaskInfo", ReplyAction="http://escience.ifmo.ru/nano/services/IStatisticalGlobalCache/AddAllTaskInfoRespo" +
            "nse")]
        void AddAllTaskInfo(System.Collections.Generic.Dictionary<ulong, CommonDataTypes.TaskStatInfo> data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://escience.ifmo.ru/nano/services/IStatisticalGlobalCache/AddAllResourcesInfo" +
            "", ReplyAction="http://escience.ifmo.ru/nano/services/IStatisticalGlobalCache/AddAllResourcesInfo" +
            "Response")]
        void AddAllResourcesInfo(System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<CommonDataTypes.RExService.Service.Entity.Info.NodeInfo>>> data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatisticalGlobalCacheChannel : ServiceProxies.StatGlobalCache.IStatisticalGlobalCache, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatisticalGlobalCacheClient : System.ServiceModel.ClientBase<ServiceProxies.StatGlobalCache.IStatisticalGlobalCache>, ServiceProxies.StatGlobalCache.IStatisticalGlobalCache {
        
        public StatisticalGlobalCacheClient() {
        }
        
        public StatisticalGlobalCacheClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatisticalGlobalCacheClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticalGlobalCacheClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticalGlobalCacheClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddAllTaskInfo(System.Collections.Generic.Dictionary<ulong, CommonDataTypes.TaskStatInfo> data) {
            base.Channel.AddAllTaskInfo(data);
        }
        
        public void AddAllResourcesInfo(System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<CommonDataTypes.RExService.Service.Entity.Info.NodeInfo>>> data) {
            base.Channel.AddAllResourcesInfo(data);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StatGlobalCache.IStatisticalService")]
    public interface IStatisticalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatisticalService/GetAllTaskInfoStartedWith", ReplyAction="http://tempuri.org/IStatisticalService/GetAllTaskInfoStartedWithResponse")]
        System.Collections.Generic.Dictionary<ulong, CommonDataTypes.TaskStatInfo> GetAllTaskInfoStartedWith(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatisticalService/GetTaskAllInfoStartedWith", ReplyAction="http://tempuri.org/IStatisticalService/GetTaskAllInfoStartedWithResponse")]
        CommonDataTypes.TaskStatInfo GetTaskAllInfoStartedWith(ulong taskId, System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatisticalService/GetAllResourcesInfoStartedWith", ReplyAction="http://tempuri.org/IStatisticalService/GetAllResourcesInfoStartedWithResponse")]
        System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<CommonDataTypes.RExService.Service.Entity.Info.NodeInfo>>> GetAllResourcesInfoStartedWith(System.DateTime date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatisticalServiceChannel : ServiceProxies.StatGlobalCache.IStatisticalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatisticalServiceClient : System.ServiceModel.ClientBase<ServiceProxies.StatGlobalCache.IStatisticalService>, ServiceProxies.StatGlobalCache.IStatisticalService {
        
        public StatisticalServiceClient() {
        }
        
        public StatisticalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatisticalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<ulong, CommonDataTypes.TaskStatInfo> GetAllTaskInfoStartedWith(System.DateTime dt) {
            return base.Channel.GetAllTaskInfoStartedWith(dt);
        }
        
        public CommonDataTypes.TaskStatInfo GetTaskAllInfoStartedWith(ulong taskId, System.DateTime dt) {
            return base.Channel.GetTaskAllInfoStartedWith(taskId, dt);
        }
        
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<CommonDataTypes.RExService.Service.Entity.Info.NodeInfo>>> GetAllResourcesInfoStartedWith(System.DateTime date) {
            return base.Channel.GetAllResourcesInfoStartedWith(date);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StatGlobalCache.IArchiveFilesService")]
    public interface IArchiveFilesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFilesService/GetAllResourcesInfoBetween", ReplyAction="http://tempuri.org/IArchiveFilesService/GetAllResourcesInfoBetweenResponse")]
        CommonDataTypes.ArchiveFilesTicket GetAllResourcesInfoBetween(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFilesService/GetAllTasksInfoBetween", ReplyAction="http://tempuri.org/IArchiveFilesService/GetAllTasksInfoBetweenResponse")]
        CommonDataTypes.ArchiveFilesTicket GetAllTasksInfoBetween(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IArchiveFilesService/GetArchiveFile", ReplyAction="http://tempuri.org/IArchiveFilesService/GetArchiveFileResponse")]
        System.IO.Stream GetArchiveFile(string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IArchiveFilesServiceChannel : ServiceProxies.StatGlobalCache.IArchiveFilesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ArchiveFilesServiceClient : System.ServiceModel.ClientBase<ServiceProxies.StatGlobalCache.IArchiveFilesService>, ServiceProxies.StatGlobalCache.IArchiveFilesService {
        
        public ArchiveFilesServiceClient() {
        }
        
        public ArchiveFilesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ArchiveFilesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArchiveFilesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ArchiveFilesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CommonDataTypes.ArchiveFilesTicket GetAllResourcesInfoBetween(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAllResourcesInfoBetween(startDate, endDate);
        }
        
        public CommonDataTypes.ArchiveFilesTicket GetAllTasksInfoBetween(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetAllTasksInfoBetween(startDate, endDate);
        }
        
        public System.IO.Stream GetArchiveFile(string fileName) {
            return base.Channel.GetArchiveFile(fileName);
        }
    }
}
