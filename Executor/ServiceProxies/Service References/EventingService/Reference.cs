//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceProxies.EventingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventReport", Namespace="http://escience.ifmo.ru/easis/eventing")]
    [System.SerializableAttribute()]
    public partial class EventReport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemeUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TopicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemeUri {
            get {
                return this.SchemeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemeUriField, value) != true)) {
                    this.SchemeUriField = value;
                    this.RaisePropertyChanged("SchemeUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Topic {
            get {
                return this.TopicField;
            }
            set {
                if ((object.ReferenceEquals(this.TopicField, value) != true)) {
                    this.TopicField = value;
                    this.RaisePropertyChanged("Topic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionRequest", Namespace="http://escience.ifmo.ru/easis/eventing")]
    [System.SerializableAttribute()]
    public partial class SubscriptionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.DeliveryModeEnum DeliveryModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.EndPoint EndToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.SubscriptionFilter[] FiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.EndPoint NotifyToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isPermanentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.DeliveryModeEnum DeliveryMode {
            get {
                return this.DeliveryModeField;
            }
            set {
                if ((this.DeliveryModeField.Equals(value) != true)) {
                    this.DeliveryModeField = value;
                    this.RaisePropertyChanged("DeliveryMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.EndPoint EndTo {
            get {
                return this.EndToField;
            }
            set {
                if ((object.ReferenceEquals(this.EndToField, value) != true)) {
                    this.EndToField = value;
                    this.RaisePropertyChanged("EndTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.SubscriptionFilter[] Filters {
            get {
                return this.FiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltersField, value) != true)) {
                    this.FiltersField = value;
                    this.RaisePropertyChanged("Filters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.EndPoint NotifyTo {
            get {
                return this.NotifyToField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyToField, value) != true)) {
                    this.NotifyToField = value;
                    this.RaisePropertyChanged("NotifyTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqName {
            get {
                return this.UniqNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqNameField, value) != true)) {
                    this.UniqNameField = value;
                    this.RaisePropertyChanged("UniqName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isPermanent {
            get {
                return this.isPermanentField;
            }
            set {
                if ((this.isPermanentField.Equals(value) != true)) {
                    this.isPermanentField = value;
                    this.RaisePropertyChanged("isPermanent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndPoint", Namespace="http://escience.ifmo.ru/easis/eventing")]
    [System.SerializableAttribute()]
    public partial class EndPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tag {
            get {
                return this.TagField;
            }
            set {
                if ((object.ReferenceEquals(this.TagField, value) != true)) {
                    this.TagField = value;
                    this.RaisePropertyChanged("Tag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryModeEnum", Namespace="http://schemas.datacontract.org/2004/07/Eventing")]
    public enum DeliveryModeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PushMode = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionFilter", Namespace="http://escience.ifmo.ru/easis/eventing")]
    [System.SerializableAttribute()]
    public partial class SubscriptionFilter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DialectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dialect {
            get {
                return this.DialectField;
            }
            set {
                if ((object.ReferenceEquals(this.DialectField, value) != true)) {
                    this.DialectField = value;
                    this.RaisePropertyChanged("Dialect");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionId", Namespace="http://escience.ifmo.ru/easis/eventing")]
    [System.SerializableAttribute()]
    public partial class SubscriptionId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subscription", Namespace="http://escience.ifmo.ru/easis/eventing")]
    [System.SerializableAttribute()]
    public partial class Subscription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.DeliveryModeEnum DeliveryModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.EndPoint EndToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.SubscriptionFilter[] FiltersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.SubscriptionId IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.EndPoint NotifyToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceProxies.EventingService.SubscriptionStatusEnum StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniqNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSystemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.DeliveryModeEnum DeliveryMode {
            get {
                return this.DeliveryModeField;
            }
            set {
                if ((this.DeliveryModeField.Equals(value) != true)) {
                    this.DeliveryModeField = value;
                    this.RaisePropertyChanged("DeliveryMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.EndPoint EndTo {
            get {
                return this.EndToField;
            }
            set {
                if ((object.ReferenceEquals(this.EndToField, value) != true)) {
                    this.EndToField = value;
                    this.RaisePropertyChanged("EndTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expires {
            get {
                return this.ExpiresField;
            }
            set {
                if ((this.ExpiresField.Equals(value) != true)) {
                    this.ExpiresField = value;
                    this.RaisePropertyChanged("Expires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.SubscriptionFilter[] Filters {
            get {
                return this.FiltersField;
            }
            set {
                if ((object.ReferenceEquals(this.FiltersField, value) != true)) {
                    this.FiltersField = value;
                    this.RaisePropertyChanged("Filters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.SubscriptionId Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.EndPoint NotifyTo {
            get {
                return this.NotifyToField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyToField, value) != true)) {
                    this.NotifyToField = value;
                    this.RaisePropertyChanged("NotifyTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceProxies.EventingService.SubscriptionStatusEnum Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UniqName {
            get {
                return this.UniqNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UniqNameField, value) != true)) {
                    this.UniqNameField = value;
                    this.RaisePropertyChanged("UniqName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSystem {
            get {
                return this.isSystemField;
            }
            set {
                if ((this.isSystemField.Equals(value) != true)) {
                    this.isSystemField = value;
                    this.RaisePropertyChanged("isSystem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/Eventing")]
    public enum SubscriptionStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Paused = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://escience.ifmo.ru/easis/eventing", ConfigurationName="EventingService.IEventingBrokerService")]
    public interface IEventingBrokerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/FireEvent", ReplyAction="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/FireEventResponse")]
        void FireEvent(ServiceProxies.EventingService.EventReport evt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/Subscribe", ReplyAction="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/SubscribeResponse")]
        ServiceProxies.EventingService.SubscriptionId Subscribe(ServiceProxies.EventingService.SubscriptionRequest subscriptionRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/Unsubscribe", ReplyAction="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/UnsubscribeResponse" +
            "")]
        void Unsubscribe(ServiceProxies.EventingService.SubscriptionId subscriptionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/GetActiveSubscripti" +
            "ons", ReplyAction="http://escience.ifmo.ru/easis/eventing/IEventingBrokerService/GetActiveSubscripti" +
            "onsResponse")]
        ServiceProxies.EventingService.Subscription[] GetActiveSubscriptions();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventingBrokerServiceChannel : ServiceProxies.EventingService.IEventingBrokerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventingBrokerServiceClient : System.ServiceModel.ClientBase<ServiceProxies.EventingService.IEventingBrokerService>, ServiceProxies.EventingService.IEventingBrokerService {
        
        public EventingBrokerServiceClient() {
        }
        
        public EventingBrokerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventingBrokerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventingBrokerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventingBrokerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void FireEvent(ServiceProxies.EventingService.EventReport evt) {
            base.Channel.FireEvent(evt);
        }
        
        public ServiceProxies.EventingService.SubscriptionId Subscribe(ServiceProxies.EventingService.SubscriptionRequest subscriptionRequest) {
            return base.Channel.Subscribe(subscriptionRequest);
        }
        
        public void Unsubscribe(ServiceProxies.EventingService.SubscriptionId subscriptionId) {
            base.Channel.Unsubscribe(subscriptionId);
        }
        
        public ServiceProxies.EventingService.Subscription[] GetActiveSubscriptions() {
            return base.Channel.GetActiveSubscriptions();
        }
    }
}
