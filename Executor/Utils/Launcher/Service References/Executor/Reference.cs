//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Launcher.Executor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskDescription", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Launcher.Executor.Task))]
    public partial class TaskDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ExecParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskFileDescription[] InputFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskLaunchMode LaunchModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskFileDescription[] OutputFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskPriority PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserCertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WfIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> ExecParams {
            get {
                return this.ExecParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecParamsField, value) != true)) {
                    this.ExecParamsField = value;
                    this.RaisePropertyChanged("ExecParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskFileDescription[] InputFiles {
            get {
                return this.InputFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.InputFilesField, value) != true)) {
                    this.InputFilesField = value;
                    this.RaisePropertyChanged("InputFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskLaunchMode LaunchMode {
            get {
                return this.LaunchModeField;
            }
            set {
                if ((this.LaunchModeField.Equals(value) != true)) {
                    this.LaunchModeField = value;
                    this.RaisePropertyChanged("LaunchMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskFileDescription[] OutputFiles {
            get {
                return this.OutputFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputFilesField, value) != true)) {
                    this.OutputFilesField = value;
                    this.RaisePropertyChanged("OutputFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Package {
            get {
                return this.PackageField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageField, value) != true)) {
                    this.PackageField = value;
                    this.RaisePropertyChanged("Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskPriority Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCert {
            get {
                return this.UserCertField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCertField, value) != true)) {
                    this.UserCertField = value;
                    this.RaisePropertyChanged("UserCert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WfId {
            get {
                return this.WfIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WfIdField, value) != true)) {
                    this.WfIdField = value;
                    this.RaisePropertyChanged("WfId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class Task : Launcher.Executor.TaskDescription {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.NodeTotals[] AssignedNodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.ResourceTotals AssignedResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskSchedule CurrentScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, double> EstimationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> OutputParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskTimeMeasurement TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.NodeTotals[] AssignedNodes {
            get {
                return this.AssignedNodesField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedNodesField, value) != true)) {
                    this.AssignedNodesField = value;
                    this.RaisePropertyChanged("AssignedNodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.ResourceTotals AssignedResource {
            get {
                return this.AssignedResourceField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedResourceField, value) != true)) {
                    this.AssignedResourceField = value;
                    this.RaisePropertyChanged("AssignedResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskSchedule CurrentSchedule {
            get {
                return this.CurrentScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentScheduleField, value) != true)) {
                    this.CurrentScheduleField = value;
                    this.RaisePropertyChanged("CurrentSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, double> Estimations {
            get {
                return this.EstimationsField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimationsField, value) != true)) {
                    this.EstimationsField = value;
                    this.RaisePropertyChanged("Estimations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> OutputParams {
            get {
                return this.OutputParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputParamsField, value) != true)) {
                    this.OutputParamsField = value;
                    this.RaisePropertyChanged("OutputParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskTimeMeasurement Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskFileDescription", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial struct TaskFileDescription : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SlotNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SlotName {
            get {
                return this.SlotNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SlotNameField, value) != true)) {
                    this.SlotNameField = value;
                    this.RaisePropertyChanged("SlotName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageId {
            get {
                return this.StorageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageIdField, value) != true)) {
                    this.StorageIdField = value;
                    this.RaisePropertyChanged("StorageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskLaunchMode", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    public enum TaskLaunchMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Auto = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskPriority", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    public enum TaskPriority : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Urgent = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceTotals", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class ResourceTotals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodesTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SupportedArchitecturesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodesTotal {
            get {
                return this.NodesTotalField;
            }
            set {
                if ((this.NodesTotalField.Equals(value) != true)) {
                    this.NodesTotalField = value;
                    this.RaisePropertyChanged("NodesTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderName {
            get {
                return this.ProviderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderNameField, value) != true)) {
                    this.ProviderNameField = value;
                    this.RaisePropertyChanged("ProviderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceDescription {
            get {
                return this.ResourceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceDescriptionField, value) != true)) {
                    this.ResourceDescriptionField = value;
                    this.RaisePropertyChanged("ResourceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SupportedArchitectures {
            get {
                return this.SupportedArchitecturesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedArchitecturesField, value) != true)) {
                    this.SupportedArchitecturesField = value;
                    this.RaisePropertyChanged("SupportedArchitectures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskSchedule", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class TaskSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.ScheduledAction ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.Estimation EstimationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.NodeConfig[] NodesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.ScheduledAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.Estimation Estimation {
            get {
                return this.EstimationField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimationField, value) != true)) {
                    this.EstimationField = value;
                    this.RaisePropertyChanged("Estimation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.NodeConfig[] Nodes {
            get {
                return this.NodesField;
            }
            set {
                if ((object.ReferenceEquals(this.NodesField, value) != true)) {
                    this.NodesField = value;
                    this.RaisePropertyChanged("Nodes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskTimeMeasurement", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class TaskTimeMeasurement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeMetric, System.TimeSpan> DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeOverheads, System.TimeSpan> OverheadAveragesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeOverheads, System.TimeSpan> OverheadTotalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, System.TimeSpan> OverheadsSpecialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeMetric, System.DateTime> WhenFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeMetric, System.DateTime> WhenStartedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeMetric, System.TimeSpan> Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeOverheads, System.TimeSpan> OverheadAverages {
            get {
                return this.OverheadAveragesField;
            }
            set {
                if ((object.ReferenceEquals(this.OverheadAveragesField, value) != true)) {
                    this.OverheadAveragesField = value;
                    this.RaisePropertyChanged("OverheadAverages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeOverheads, System.TimeSpan> OverheadTotals {
            get {
                return this.OverheadTotalsField;
            }
            set {
                if ((object.ReferenceEquals(this.OverheadTotalsField, value) != true)) {
                    this.OverheadTotalsField = value;
                    this.RaisePropertyChanged("OverheadTotals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, System.TimeSpan> OverheadsSpecial {
            get {
                return this.OverheadsSpecialField;
            }
            set {
                if ((object.ReferenceEquals(this.OverheadsSpecialField, value) != true)) {
                    this.OverheadsSpecialField = value;
                    this.RaisePropertyChanged("OverheadsSpecial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeMetric, System.DateTime> WhenFinished {
            get {
                return this.WhenFinishedField;
            }
            set {
                if ((object.ReferenceEquals(this.WhenFinishedField, value) != true)) {
                    this.WhenFinishedField = value;
                    this.RaisePropertyChanged("WhenFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<Launcher.Executor.TaskTimeMetric, System.DateTime> WhenStarted {
            get {
                return this.WhenStartedField;
            }
            set {
                if ((object.ReferenceEquals(this.WhenStartedField, value) != true)) {
                    this.WhenStartedField = value;
                    this.RaisePropertyChanged("WhenStarted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeTotals", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class NodeTotals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoresUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SupportedArchitecturesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CoresUsed {
            get {
                return this.CoresUsedField;
            }
            set {
                if ((this.CoresUsedField.Equals(value) != true)) {
                    this.CoresUsedField = value;
                    this.RaisePropertyChanged("CoresUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeName {
            get {
                return this.NodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeNameField, value) != true)) {
                    this.NodeNameField = value;
                    this.RaisePropertyChanged("NodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SupportedArchitectures {
            get {
                return this.SupportedArchitecturesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedArchitecturesField, value) != true)) {
                    this.SupportedArchitecturesField = value;
                    this.RaisePropertyChanged("SupportedArchitectures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskState", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    public enum TaskState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Defined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToExecute = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scheduled = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Started = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aborted = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Estimation", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class Estimation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.ModelEstimation ByModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.HistoryEstimation FromHistoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.ModelEstimation ByModel {
            get {
                return this.ByModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ByModelField, value) != true)) {
                    this.ByModelField = value;
                    this.RaisePropertyChanged("ByModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.HistoryEstimation FromHistory {
            get {
                return this.FromHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.FromHistoryField, value) != true)) {
                    this.FromHistoryField = value;
                    this.RaisePropertyChanged("FromHistory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduledAction", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    public enum ScheduledAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Abort = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Run = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NodeConfig", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial struct NodeConfig : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint CoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NodeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Cores {
            get {
                return this.CoresField;
            }
            set {
                if ((this.CoresField.Equals(value) != true)) {
                    this.CoresField = value;
                    this.RaisePropertyChanged("Cores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeName {
            get {
                return this.NodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeNameField, value) != true)) {
                    this.NodeNameField = value;
                    this.RaisePropertyChanged("NodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelEstimation", Namespace="http://schemas.datacontract.org/2004/07/Easis.PackageBase.Definition")]
    [System.SerializableAttribute()]
    public partial class ModelEstimation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.ValueWithDispersionOfdouble CalculationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.ValueWithDispersionOfunsignedLong TotalOutputFileSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.ValueWithDispersionOfdouble CalculationTime {
            get {
                return this.CalculationTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CalculationTimeField, value) != true)) {
                    this.CalculationTimeField = value;
                    this.RaisePropertyChanged("CalculationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.ValueWithDispersionOfunsignedLong TotalOutputFileSize {
            get {
                return this.TotalOutputFileSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalOutputFileSizeField, value) != true)) {
                    this.TotalOutputFileSizeField = value;
                    this.RaisePropertyChanged("TotalOutputFileSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryEstimation", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class HistoryEstimation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CalcDurationInSecondsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CalcDurationInSeconds {
            get {
                return this.CalcDurationInSecondsField;
            }
            set {
                if ((this.CalcDurationInSecondsField.Equals(value) != true)) {
                    this.CalcDurationInSecondsField = value;
                    this.RaisePropertyChanged("CalcDurationInSeconds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueWithDispersionOfdouble", Namespace="http://schemas.datacontract.org/2004/07/Easis.PackageBase.Definition")]
    [System.SerializableAttribute()]
    public partial class ValueWithDispersionOfdouble : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DispersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Dispersion {
            get {
                return this.DispersionField;
            }
            set {
                if ((this.DispersionField.Equals(value) != true)) {
                    this.DispersionField = value;
                    this.RaisePropertyChanged("Dispersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueWithDispersionOfunsignedLong", Namespace="http://schemas.datacontract.org/2004/07/Easis.PackageBase.Definition")]
    [System.SerializableAttribute()]
    public partial class ValueWithDispersionOfunsignedLong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DispersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Dispersion {
            get {
                return this.DispersionField;
            }
            set {
                if ((this.DispersionField.Equals(value) != true)) {
                    this.DispersionField = value;
                    this.RaisePropertyChanged("Dispersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskTimeMetric", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    public enum TaskTimeMetric : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Postponed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queued = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Brokering = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Calculation = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskTimeOverheads", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    public enum TaskTimeOverheads : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitInQueue = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageBase = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Estimation = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scheduler = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Provider = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InputFilesCopy = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutputFilesCopy = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskDependency", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial struct TaskDependency : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ChildTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong ParentTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WfIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ChildTaskId {
            get {
                return this.ChildTaskIdField;
            }
            set {
                if ((this.ChildTaskIdField.Equals(value) != true)) {
                    this.ChildTaskIdField = value;
                    this.RaisePropertyChanged("ChildTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong ParentTaskId {
            get {
                return this.ParentTaskIdField;
            }
            set {
                if ((this.ParentTaskIdField.Equals(value) != true)) {
                    this.ParentTaskIdField = value;
                    this.RaisePropertyChanged("ParentTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WfId {
            get {
                return this.WfIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WfIdField, value) != true)) {
                    this.WfIdField = value;
                    this.RaisePropertyChanged("WfId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BriefTaskInfo", Namespace="http://schemas.datacontract.org/2004/07/MITP")]
    [System.SerializableAttribute()]
    public partial class BriefTaskInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NodeAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Launcher.Executor.TaskState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WfIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NodeAddresses {
            get {
                return this.NodeAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeAddressesField, value) != true)) {
                    this.NodeAddressesField = value;
                    this.RaisePropertyChanged("NodeAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Package {
            get {
                return this.PackageField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageField, value) != true)) {
                    this.PackageField = value;
                    this.RaisePropertyChanged("Package");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Launcher.Executor.TaskState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WfId {
            get {
                return this.WfIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WfIdField, value) != true)) {
                    this.WfIdField = value;
                    this.RaisePropertyChanged("WfId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Executor.IExecutionBrokerService")]
    public interface IExecutionBrokerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/MagicHappens", ReplyAction="http://tempuri.org/IExecutionBrokerService/MagicHappensResponse")]
        bool MagicHappens();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/DefineTask", ReplyAction="http://tempuri.org/IExecutionBrokerService/DefineTaskResponse")]
        void DefineTask(Launcher.Executor.TaskDescription task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/DefineDependencies", ReplyAction="http://tempuri.org/IExecutionBrokerService/DefineDependenciesResponse")]
        void DefineDependencies(Launcher.Executor.TaskDependency[] dependencies);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/Execute", ReplyAction="http://tempuri.org/IExecutionBrokerService/ExecuteResponse")]
        void Execute(ulong[] taskIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/Abort", ReplyAction="http://tempuri.org/IExecutionBrokerService/AbortResponse")]
        void Abort(ulong[] taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/GetInfo", ReplyAction="http://tempuri.org/IExecutionBrokerService/GetInfoResponse")]
        Launcher.Executor.Task GetInfo(ulong taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/GetBriefTaskList", ReplyAction="http://tempuri.org/IExecutionBrokerService/GetBriefTaskListResponse")]
        Launcher.Executor.BriefTaskInfo[] GetBriefTaskList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/GetNewTaskId", ReplyAction="http://tempuri.org/IExecutionBrokerService/GetNewTaskIdResponse")]
        ulong GetNewTaskId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExecutionBrokerService/Update", ReplyAction="http://tempuri.org/IExecutionBrokerService/UpdateResponse")]
        void Update();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExecutionBrokerServiceChannel : Launcher.Executor.IExecutionBrokerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecutionBrokerServiceClient : System.ServiceModel.ClientBase<Launcher.Executor.IExecutionBrokerService>, Launcher.Executor.IExecutionBrokerService {
        
        public ExecutionBrokerServiceClient() {
        }
        
        public ExecutionBrokerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExecutionBrokerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExecutionBrokerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExecutionBrokerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool MagicHappens() {
            return base.Channel.MagicHappens();
        }
        
        public void DefineTask(Launcher.Executor.TaskDescription task) {
            base.Channel.DefineTask(task);
        }
        
        public void DefineDependencies(Launcher.Executor.TaskDependency[] dependencies) {
            base.Channel.DefineDependencies(dependencies);
        }
        
        public void Execute(ulong[] taskIds) {
            base.Channel.Execute(taskIds);
        }
        
        public void Abort(ulong[] taskId) {
            base.Channel.Abort(taskId);
        }
        
        public Launcher.Executor.Task GetInfo(ulong taskId) {
            return base.Channel.GetInfo(taskId);
        }
        
        public Launcher.Executor.BriefTaskInfo[] GetBriefTaskList() {
            return base.Channel.GetBriefTaskList();
        }
        
        public ulong GetNewTaskId() {
            return base.Channel.GetNewTaskId();
        }
        
        public void Update() {
            base.Channel.Update();
        }
    }
}
