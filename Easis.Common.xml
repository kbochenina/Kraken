<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Easis.Common</name>
    </assembly>
    <members>
        <member name="T:Easis.Common.IdGenerators.LongOidGenerator">
            <summary>
            Генератор идентификаторов типа long для объектов.
            Thread-safe
            </summary>
        </member>
        <member name="T:Easis.Common.IdGenerators.OidGeneratorBase`1">
            <summary>
            Базовый абстрактный генератор идентификаторов для объектов. (thread-safe).
            </summary>
            <typeparam name="TId">Тип генерируемого идентификатора.</typeparam>
        </member>
        <member name="T:Easis.Common.IdGenerators.IOidGenerator`1">
            <summary>
            Интерфейс для генерации идентификаторов для объектов.
            Для одного и того же объект должен возвращаться всегда один
            и тот же Id независимо от того, сколько раз вызван метод
            GetId().
            </summary>
            <typeparam name="TId">Тип генерируемого идентификатора.</typeparam>
        </member>
        <member name="M:Easis.Common.IdGenerators.IOidGenerator`1.GetId(System.Object)">
            <summary>
            Возвращает идентификатор для переданного объекта.
            </summary>
            <param name="obj">Объект.</param>
            <returns>Идентификатор.</returns>
        </member>
        <member name="M:Easis.Common.IdGenerators.OidGeneratorBase`1.GenerateId(System.Object)">
            <summary>
            Реализация дочерних классов должна по переданному объекту возвращать Id.
            </summary>
            <param name="obj">Объект, для которого запрашивается идентификатор.</param>
            <returns>Идентификатор.</returns>
        </member>
        <member name="M:Easis.Common.IdGenerators.OidGeneratorBase`1.GetId(System.Object)">
            <summary>
            Возвращает идентификатор для объекта. Для одного и того же объекта
            при двух последовательных вызовах вернётся один и тот же идентфикатор.
            </summary>
            <param name="obj">Объект, для которого запрашивается идентификатор.</param>
            <returns>Идентификатор.</returns>
        </member>
        <member name="T:Easis.Common.Collections.IOwnedCollection`2">
            <summary>
            Интерфейс коллекции, которой кто-то владеет. Причём объект-владелец при добавлении
            в коллекцию каким-то образом модифицирует объект (например, проставляет ему
            Id), поэтому такая коллекция не может содержать пустые и дублирующие элементы.
            Классы, реализующие этот интерфейс, должны это учитывать.
            </summary>
            <typeparam name="TOwner">Тип владельца коллекции.</typeparam>
            <typeparam name="TItem">Тип элемента коллекции.</typeparam>
        </member>
        <member name="P:Easis.Common.Collections.IOwnedCollection`2.Owner">
            <summary>
            Возвращает владельца коллекции.
            </summary>
        </member>
        <member name="T:Easis.Common.IdGenerators.LongIdGenerator">
            <summary>
            Генератор идентификаторов типа long.
            </summary>
        </member>
        <member name="T:Easis.Common.IdGenerators.IIdGenerator`1">
            <summary>
            Интерфейс для генераторов идентификаторов.
            </summary>
            <typeparam name="TId">Тип генерируемого идентификатора.</typeparam>
        </member>
        <member name="M:Easis.Common.IdGenerators.IIdGenerator`1.GetId">
            <summary>
            Возвращает следующий идентификатор.
            </summary>
            <returns>Новый идентификатор.</returns>
        </member>
        <member name="M:Easis.Common.IdGenerators.LongIdGenerator.GetId">
            <summary>
            Возвращает следующий идентификатор.
            </summary>
            <returns>Новый идентификатор.</returns>
        </member>
        <member name="M:Easis.Common.IdGenerators.GuidOidGenerator.GenerateId(System.Object)">
            <summary>
            Реализация дочерний классов должна по переданному объекту возвращать Id.
            </summary>
            <param name="obj">Объект, для которого запрашивается идентификатор.</param>
            <returns>Идентификатор.</returns>
        </member>
        <member name="M:Easis.Common.Collections.SyncronizedQueue`1.Enqueue(`0)">
            <summary>
            Adds an item to the queue
            </summary>
            <param name="item">the item to add to the queue</param>
        </member>
        <member name="M:Easis.Common.Collections.SyncronizedQueue`1.Dequeue">
            <summary>
            Removes and returns the item in the beginning of the queue
            Syncronous method. If there is no elements, it blockes execution.
            </summary>
        </member>
        <member name="M:Easis.Common.Collections.SyncronizedQueue`1.EnqueueAll(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Enqueues the list of items
            </summary>
            <param name="itemsToQueue">list of items to enqueue</param>
        </member>
        <member name="T:Easis.Common.HashCode">
            <summary>
            Hash code generator class.
            </summary>
        </member>
        <member name="M:Easis.Common.HashCode.Generate``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns combined hash code for the list objects.
            </summary>
            <typeparam name="T">Type of objects.</typeparam>
            <param name="objects">List of objects to get combined hash.</param>
            <returns>Combined hash code.</returns>
        </member>
        <member name="M:Easis.Common.HashCode.Combine(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns combined hash code for the list of hashes.
            </summary>
            <param name="hashes">List of hashes.</param>
            <returns>Combined hash code.</returns>
        </member>
        <member name="M:Easis.Common.HashCode.Combine(System.Int32[])">
            <summary>
            Returns combined hash for the list of hashes.
            </summary>
            <param name="hashes">List of hashes.</param>
            <returns>Combined hash code.</returns>
        </member>
        <member name="M:Easis.Common.HashCode.Generate(System.Object[])">
            <summary>
            Returns combined hash code for the list objects.
            </summary>
            <param name="objects">List of objects.</param>
            <returns>Combined hash code.</returns>
        </member>
        <member name="T:Easis.Common.Pair`2">
            <summary>
            Класс, хранящий пару значений.
            </summary>
            <typeparam name="TFirst">Тип первого элемента.</typeparam>
            <typeparam name="TSecond">Тип второго элемента.</typeparam>
        </member>
        <member name="M:Easis.Common.Pair`2.#ctor(`0,`1)">
            <summary>
            Конструктор.
            </summary>
            <param name="first">Первое значение.</param>
            <param name="second">Второе значение.</param>
        </member>
        <member name="M:Easis.Common.Pair`2.#ctor(Easis.Common.Pair{`0,`1})">
            <summary>
            Копирующий конструктор.
            </summary>
            <param name="pair">Пара-донор.</param>
        </member>
        <member name="M:Easis.Common.Pair`2.Equals(Easis.Common.Pair{`0,`1})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Easis.Common.Pair`2.Equals(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:Easis.Common.Pair`2.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <returns>
            true if <paramref name="obj"/> and this instance are the same type and represent the same value; otherwise, false.
            </returns>
            <param name="obj">Another object to compare to. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Easis.Common.Pair`2.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Easis.Common.Pair`2.First">
            <summary>
            Возвращает первое значение.
            </summary>
        </member>
        <member name="P:Easis.Common.Pair`2.Second">
            <summary>
            Возвращает второе значение.
            </summary>
        </member>
        <member name="M:Easis.Common.IdGenerators.StatelessOidGenerator`1.#ctor(System.Func{System.Object,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:Easis.Common.IdGenerators.StatelessOidGenerator`1.GenerateId(System.Object)">
            <summary>
            Реализация дочерний классов должна по переданному объекту возвращать Id.
            </summary>
            <param name="obj">Объект, для которого запрашивается идентификатор.</param>
            <returns>Идентификатор.</returns>
        </member>
        <member name="T:Easis.Common.Collections.ListCollection`1">
            <summary>
            Коллекция, повторяющая функциональность класса List(T), но открытая для перегрузки + thread safe.
            </summary>
            <typeparam name="TItem">Тип элемента коллекции.</typeparam>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.#ctor">
            <summary>
            Конструктор по умолчанию.
            </summary>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Easis.Common.Collections.ListCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#Generic#IEnumerable{TItem}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.-or-Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing. </param><param name="index">The zero-based index in <paramref name="array"/> at which copying begins. </param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null. </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero. </exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>. </exception><exception cref="T:System.ArgumentException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <returns>
            The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection,
            </returns>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList"/>. </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> contains a specific value.
            </summary>
            <returns>
            true if the <see cref="T:System.Object"/> is found in the <see cref="T:System.Collections.IList"/>; otherwise, false.
            </returns>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
            <returns>
            The index of <paramref name="value"/> if found in the list; otherwise, -1.
            </returns>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value"/> should be inserted. </param><param name="value">The object to insert into the <see cref="T:System.Collections.IList"/>. </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception><exception cref="T:System.NullReferenceException"><paramref name="value"/> is null reference in the <see cref="T:System.Collections.IList"/>.</exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Easis.Common.Collections.ListCollection`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList"/>. </param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"/> is read-only.-or- The <see cref="T:System.Collections.IList"/> has a fixed size. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:Easis.Common.Collections.ListCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:Easis.Common.Collections.ListCollection`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Easis.Common.Collections.ListCollection`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Easis.Common.Collections.ListCollection`1.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Easis.Common.Collections.ListCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Easis.Common.Collections.ListCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set. </param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList"/> is read-only. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:Easis.Common.Collections.ListCollection`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.IList"/> has a fixed size; otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Easis.Common.Collections.OwnedCollection`2">
            <summary>
            Класс коллекции, которой кто-то владеет.
            Причём объект-владелец при добавлении в коллекцию каким-то образом модифицирует
            объект (например, проставляет ему Id), поэтому такая коллекция не может содержать
            пустые и дублирующие элементы.
            </summary>
            <typeparam name="TOwner">Тип владельца коллекции.</typeparam>
            <typeparam name="TItem">Тип элемента коллекции.</typeparam>
        </member>
        <member name="M:Easis.Common.Collections.OwnedCollection`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:Easis.Common.Collections.OwnedCollection`2.#ctor(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:Easis.Common.Collections.OwnedCollection`2.Add(`1)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Easis.Common.Collections.OwnedCollection`2.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Easis.Common.Collections.OwnedCollection`2.Remove(`1)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Easis.Common.Collections.OwnedCollection`2.Insert(System.Int32,`1)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Easis.Common.Collections.OwnedCollection`2.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Easis.Common.Collections.OwnedCollection`2.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Easis.Common.Collections.OwnedCollection`2.Owner">
            <summary>
            Возвращает владельца коллекции.
            </summary>
        </member>
    </members>
</doc>
